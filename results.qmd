---
execute:
  echo: true
  warning: false
---


# Results
```{r}
# install.packages('nycmaps')
# devtools::install_github("zachcp/nycmaps")
#install.packages('pak')
#pak::pak('thomasp85/gganimate')
#install.packages('gapminder')
#install.packages("gifski")
#install.packages('png')
library(vcdExtra)
library(ggplot2)
library(dplyr)
library(ggplot2)
library(vcd)
library(stringr)
library(lubridate)
library(forcats)
library(nycmaps)
library(maps)
library(viridis)
library(png)
library(gifski)
library(gganimate)
library(gapminder)

origin_df <- read.csv('NYPD_Complaint_Data_Current__Year_To_Date_.csv')
origin_df[origin_df == "(null)"] <- NA
origin_df[origin_df == "UNKNOWN"] <- NA
```

```{r}
df <- origin_df
Sys.setenv(LANG = "en")
```


```{r}
# Removing useless columns and preprocessing
cols_to_remove <- c('HADEVELOPT', 'PARKS_NM', 'TRANSIT_DISTRICT','STATION_NAME',
                    'HOUSING_PSA', 'CMPLNT_NUM', 'LOC_OF_OCCUR_DESC',
                    'JURISDICTION_CODE','KY_CD','PD_CD','RPT_DT','ADDR_PCT_CD')
df <- df[, !(names(df) %in% cols_to_remove)]

df$Date <- as.Date(df$CMPLNT_FR_DT, format = "%m/%d/%Y")
df$CMPLNT_FR_TM <- strptime(df$CMPLNT_FR_TM, format = "%H:%M:%S")
df$Hour <- format(df$CMPLNT_FR_TM, format = "%H")

df$Hour <- as.integer(df$Hour)


cols_to_remove <- c('CMPLNT_FR_TM', 'CMPLNT_TO_DT','CMPLNT_TO_TM', 'CMPLNT_FR_DT')
df <- df[, !(names(df) %in% cols_to_remove)]
```

```{r}

df <- df[order(df$Date), ]

ggplot(df, aes(x = Date)) +
  geom_histogram(binwidth = 7, fill = "skyblue", color = "black", alpha = 0.7) +
  geom_vline(xintercept = as.Date("2023-01-01"), linetype = "dashed", color = "red", linewidth = 1) +
  labs(title = "Date Counts Histogram", x = "Date", y = "Count") +
  xlim(as.Date('2022-01-01'), max(df$Date)) +
  theme_minimal()
```

A significant proportion of the recorded crimes happened in the year 2023. We have underrepresented data in 2022, therefore we'll examine the data only in 2023.

```{r}
df <- df[df$Date >= as.Date('2023-01-01'), ]
df$Month <- month(df$Date)
# df$Month <- as.integer(df$Month)
df$Month <- factor(month.name[df$Month], levels = month.name)
# df
```

```{r}
value_counts <- table(df$LAW_CAT_CD)

count_df <- data.frame(Category = names(value_counts), Count = as.numeric(value_counts))
count_df <- count_df[count_df$Count > 0,]


ggplot(count_df, aes(y = Count, x = Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Frequency of Crimes by Severity",
       y = "Frequency",
       x = "Crime Severity") +
  theme_minimal() 
```


Felony: The most serious types of crimes. Examples of felonies include murder, rape, robbery, arson, and selling/possessing controlled substances. It is punishable by imprisonment for more than one year, or as long as life imprisonment.

Misdemeanor: A misdemeanor is the lowest level of crime. It is more serious than a violation, but less serious than a felony. It is a crime punishable by probation, a fine, or up to one year in jail.

Violation: Any non-criminal offense, other than traffic infractions. An offense punishable by up to a $250 fine or up to 15 days in jail. Examples of common violations include disorderly conduct and trespassing.


Misdemeanors make up the highest proportion of crimes. This includes less serious crimes with lighter punishments, so people may be more willing to risk attempting these types of crimes. 


Definitions from:
https://www.nycourts.gov/courthelp/criminal/typesCriminalCases.shtml
https://www.nyc.gov/site/nypd/services/victim-services/glossary.page

```{r}
value_counts <- table(df[, c("OFNS_DESC", "LAW_CAT_CD")])
count_df_crimes <- data.frame(value_counts)
count_df_crimes$OFNS_DESC <- paste(count_df_crimes$OFNS_DESC, count_df_crimes$LAW_CAT_CD, sep = " ")
count_df_crimes <- count_df_crimes[count_df_crimes$Freq > 4000,]

count_df_crimes <- count_df_crimes[order(count_df_crimes$Freq), ]

ggplot(count_df_crimes, aes(x = Freq, y = reorder(OFNS_DESC, Freq), fill = LAW_CAT_CD)) +
  geom_bar(stat = "identity") +
  labs(title = "Most Common Crimes",
       y = "Crime Type",
       x = "Frequency",
       fill="Severity") +
  scale_fill_manual(values = c( "#3B0000", "#AF0000", "#FF0000")) +
  theme_minimal() 

```
Petit Larceny is the highest committed crime, almost double the third highest crime. Petit Larceny means stealing goods below 1000 dollars, while Grand Larceny involves stealing goods 1000 dollars or above. There is plenty of opportunity for Larceny in New York City, especially Manhattan, due to the amount of products/goods and high population density.

2nd Degree Harassment includes making physical contact in a threatening way (ex:shoving, kicking), following a person in a public place, or repeatedly engaging in annoying or alarming acts.

3rd Degree Assault involves causing physical injury to someone, while Felony Assault involves causing serious injury.

Crime definitions from: https://www.nysenate.gov/legislation/laws/PEN/P3TJA155

```{r}
value_counts <- table(df$BORO_NM)
count_df <- data.frame(Category = names(value_counts), Count = as.numeric(value_counts))
population <- c(1379946, 2590516, 1596273, 2278029, 491133)
count_df$Pop <- population

crime_counts <- df %>%
  group_by(BORO_NM, LAW_CAT_CD) %>%
  summarise(CrimeCount = n()) %>%
  ungroup()
colnames(crime_counts)[colnames(crime_counts) == "BORO_NM"] <- "Category"
crime_counts <- merge(crime_counts, count_df, by='Category', all.x=TRUE)
crime_counts <- crime_counts[, c('Category', 'LAW_CAT_CD', 'CrimeCount', 'Pop')]
crime_counts <- crime_counts[!crime_counts$Category %in% NA,]
crime_counts$CrimePerPop <- 100000*crime_counts$CrimeCount/crime_counts$Pop



ggplot(crime_counts, aes(x = CrimePerPop, y = reorder(Category, CrimePerPop), fill = fct_rev(LAW_CAT_CD))) +
  geom_bar(stat = "identity") +
  labs(title = "Crime per Capita by Borough",
       x = "Crime per Capita",
       y = "Borough",
       fill = "Severity") +
  scale_fill_manual(values = c( "#FF0000", "#AF0000", "#3B0000"))+
  theme_minimal()

```


The Bronx has the highest crime per capita while Staten Island has the lowest.
Manhattan also has a high crime per capita, just behind the Bronx.


2022 population estimates were taken from: https://www.nyc.gov/site/planning/planning-level/nyc-population/nyc-population-current-estimates.page


```{r}
top_crimes <- count_df_crimes %>% tail(5)
top_crimes$OFNS_DESC <- str_remove(top_crimes$OFNS_DESC, "\\s+\\w+$")
borough_crime_df <- df[df$OFNS_DESC %in% top_crimes$OFNS_DESC,]
borough_crime_df$OFNS_DESC <- factor(borough_crime_df$OFNS_DESC, levels = top_crimes$OFNS_DESC)

borough_crime_df %>%
  vcd::mosaic(OFNS_DESC ~ BORO_NM, 
              data = .,
              direction = c("v", "h"),
              main = 'Proportion of top 5 crimes in boroughs',
              labeling = labeling_border(
                      xlab = "lab",
                       gp_labels = gpar(fontsize = 8),
                       rot_labels = c(30,0,0,0),
                       offset_label =c(1,0,0,0),
                       varnames = c(FALSE, FALSE),
                       just_labels=c("center","right")
                       ))
```
Manhattan has higher Petit Larceny and Grand Larceny rates due to more consumer products being sold. Assault 3, Grand Larceny, and Harassment are lower probably due to a higher police presence and denser population. A lot of the crime is due to larceny, rather than assault or harassment.

The other boroughs have lower larceny rates but higher assault and harassment rates. The Bronx has more Assault and Harassment than Larceny.



```{r}
value_counts <- table(df$PREM_TYP_DESC)

count_df <- data.frame(Category = names(value_counts), Count = as.numeric(value_counts))
count_df <- count_df[count_df$Count > 7000,]


count_df <- count_df[order(count_df$Count), ]


count_premise_df <- df %>% count(PREM_TYP_DESC)
filtered_df <- count_premise_df[count_premise_df$n > 7000, ]
filtered_df <- filtered_df %>% na.omit()
df$PREM_TYP_DESC <- fct_rev(fct_infreq(df$PREM_TYP_DESC))


ggplot(df[df$PREM_TYP_DESC %in% filtered_df$PREM_TYP_DESC,], aes(y = PREM_TYP_DESC, fill = fct_rev(factor(LAW_CAT_CD)))) +
  geom_bar() +
  labs(title = "Frequency of Crimes at Premise",x="Frequency", y = "Premise Type", fill = "Severity") +
scale_fill_manual(values = c("#FF0000", "#AF0000", "#3B0000"))
```
The streets are a common place for crime. Stay off the streets.
Crime has frequently happened at homes too. Don't forget to lock your doors!

Subways are not as dangerous as people expect, probably because subways typically have a lot of people.

```{r}
value_counts <- table(df[, c("OFNS_DESC", "PREM_TYP_DESC")])
count_df <- data.frame(value_counts)

result <- count_df %>%
  group_by(PREM_TYP_DESC) %>%
  summarise(total_value = sum(Freq))

count_df <- merge(count_df, result, by = "PREM_TYP_DESC")
count_df$ratio <- count_df$Freq*100 / count_df$total_value
count_df <- count_df[count_df$total_value > 8000,]
count_df <- count_df[count_df$ratio > 0,]

sorted_df <- count_df %>%
  group_by(PREM_TYP_DESC) %>%
  arrange(desc(ratio)) %>%
  slice_head(n = 5)

sorted_df$OFNS_DESC <- str_sub(sorted_df$OFNS_DESC, end = 15)
sorted_df$PREM_TYP_DESC <- str_wrap(sorted_df$PREM_TYP_DESC, width = 15)
sorted_df <- sorted_df %>% arrange(ratio)



ggplot(sorted_df, aes(x = ratio, y = reorder(factor(OFNS_DESC), ratio), fill = OFNS_DESC)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~PREM_TYP_DESC, scales = "free",ncol = 3) +
  labs(title = "Proportion of 5 most common offense across 9 highest crime rate premises", x = "Percent(%)", y = "Type of Offense") +
  theme( 
        strip.text = element_text(size = 7), 
        axis.text.y = element_text(size = 7)
        ) + 
  guides(fill = FALSE) + 
  coord_cartesian(xlim = c(0, 100))
```
The plots above show, the proportion of crimes in each premises types. Only the top 5 common crimes are shown. Here we can see 3 general trends: 1) Indoor shop areas such as chain stores, commercial building, department store and drug stores show disproportionately high levels of Petit Larceny. 2) Residence areas show higher levels of assaults and harrassment. 3) Outdoor areas such as streets and the subway show an almost equal mix of all types of crimes.

This suggests shoplifting is indeed a big problem in stores, causing discomfort and injury to other people is a big problem in residential areas and outdoor areas have all sorts of crimes represented similarly.


```{r}
ggplot(df, aes(x = Month, fill = fct_rev(factor(LAW_CAT_CD)))) +
  geom_bar() +
  labs(title = "Crimes per month", x = "Month", y = "Frequency", fill = "Severity") +
scale_fill_manual(values = c("#EF0000", "#9F0000", "#3B0000"))

```
Crime appears to have a slight increase during the summer months from May to August, exceeding 45000 this year. But since the difference isn't huge, we also ran a chi-squared test to check independence: 

```{r}
month_contingency_table <- table(df$Month)
month_contingency_table <- month_contingency_table[month_contingency_table>0]
# print(month_contingency_table)
month_chi_sq <- chisq.test(month_contingency_table)
print(month_chi_sq)

```
As you can see, the month does indeed affect the frequency of crime.

```{r}
# Crimes over time:

value_counts <- table(df[, c("OFNS_DESC", "Hour")])
crime_df <- data.frame(value_counts)

# Severity
ggplot(df, aes(x = factor(Hour), color = LAW_CAT_CD, group = LAW_CAT_CD)) +
  geom_point(stat = "count", size = 3) +
  geom_line(stat = "count", size = 1) +
  labs(title = "Crimes over time (Severity)",
       x = "Time (Hour)", y = "Count", colour="Severity") +
  scale_color_manual(values = c( "#3B0000", "#AF0000", "#FF0000")) +
  scale_x_discrete(breaks = seq(0, 24, by = 5), labels = function(x) sprintf("%02d:00", as.numeric(x))) +
  theme_minimal()
```
Across all severity levels, crimes tend to peak in the afternoon around 3-5pm. There is also a spike in crime at noon. This could be due to the fact that there are more people out and more shops open in the afternoon, which gives criminals more opportunity. Overall crime tends to decline at night.

Crime is lowest at 5am, before it increases again into the morning. Let's break down the types of crime even further for more information:


```{r}
# Top 5
top_categories <- df %>%
  group_by(OFNS_DESC) %>%
  summarise(Count = n()) %>%
  arrange(desc(Count))
  
top_5 <- top_categories %>% head(5)
data_filtered <- df %>%
  filter(OFNS_DESC %in% top_5$OFNS_DESC)


ggplot(data_filtered, aes(x = factor(Hour), color = OFNS_DESC, group = OFNS_DESC)) +
  geom_point(stat = "count", size = 2, alpha=0.5) +
  geom_line(stat = "count", size = 0.5) +
  labs(title = "Crimes over time (Top 5 most common offenses)",
       x = "Time (Hour)", y = "Count", colour="Offense") +
  scale_x_discrete(breaks = seq(0, 24, by = 5), labels = function(x) sprintf("%02d:00", as.numeric(x))) +
  theme_minimal()
```

The highest crimes (Petit Larceny, Harrassment 2, and Grand Larceny) rise from 6am, peak at noon, and have a steep decline after 3pm.
Assault 3 typically occurs in the afternoon, with peaks at noon and 3pm. This stays relatively high at night compared to the other top crimes.

```{r}
# Top 6-10
subset_crimes <- top_categories %>% slice(6:10)
data_filtered <- crime_df %>%
  filter(OFNS_DESC %in% subset_crimes$OFNS_DESC)

ggplot(data_filtered, aes(x = factor(Hour), y=Freq, color = OFNS_DESC, group = OFNS_DESC)) +
  geom_line(stat = "smooth", method = "loess", size = 0.7) +
  labs(title = "Crimes over time (Top 6-10)",
       x = "Time (Hour)", y = "Count", colour="Offense") +
  scale_x_discrete(breaks = seq(0, 24, by = 5), labels = function(x) sprintf("%02d:00", as.numeric(x))) +
  theme_minimal()



# Top 11-15
subset_crimes <- top_categories %>% slice(11:15)
data_filtered <- crime_df %>%
  filter(OFNS_DESC %in% subset_crimes$OFNS_DESC)

ggplot(data_filtered, aes(x = factor(Hour), y=Freq, color = OFNS_DESC, group = OFNS_DESC)) +
  geom_line(stat = "smooth", method = "loess", size = 0.7) +
  labs(title = "Crimes over time (Top 11-15)",
       x = "Time (Hour)", y = "Count", colour="Offense") +
  scale_x_discrete(breaks = seq(0, 24, by = 5), labels = function(x) sprintf("%02d:00", as.numeric(x))) +
  theme_minimal()
```





```{r}
susp_df <- df[df$SUSP_SEX != 'U',]
susp_df <- susp_df[susp_df$SUSP_AGE_GROUP %in% c('<18','18-24','25-44','45-64', '65+'),]
colnames(susp_df)[colnames(susp_df) == "SUSP_AGE_GROUP"] <- "Suspect_Age_Group"
colnames(susp_df)[colnames(susp_df) == "SUSP_SEX"] <- "Suspect_Sex"
colnames(susp_df)[colnames(susp_df) == "SUSP_RACE"] <- "Suspect_Race"

susp_df %>%
  vcd::mosaic(fct_rev(LAW_CAT_CD) ~ Suspect_Age_Group + Suspect_Sex, 
              data = .,
              direction = c("v", "v", "h"),
              main = 'Suspect Age Group and Sex',
              labeling = labeling_border(
                      xlab = "lab",
                       gp_labels = gpar(fontsize = 8),
                       rot_labels = c(0,0,0,0),
                       offset_label =c(0,0,0,-0.75),
                       varnames = c(TRUE, TRUE, FALSE),
                       just_labels=c("center","right")
                       ))

susp_df %>%
  vcd::mosaic(fct_rev(LAW_CAT_CD) ~ Suspect_Race + Suspect_Sex, 
              data = .,
              direction = c("v", "v", "h"),
              main = 'Suspect Race and Sex',
              labeling = labeling_border(
                      xlab = "lab",
                       gp_labels = gpar(fontsize = 6.5),
                       rot_labels = c(30,0,0,0),
                       offset_label =c(1.2,0,0,-0.75),
                       varnames = c(FALSE, TRUE, FALSE),
                       just_labels=c("center","right")
                       ))
```


```{r}
vic_df <- df[!df$VIC_SEX %in% c('U', 'D', 'E', 'L'),]
vic_df <- vic_df[vic_df$VIC_AGE_GROUP %in% c('<18','18-24','25-44','45-64', '65+'),]
colnames(vic_df)[colnames(vic_df) == "VIC_AGE_GROUP"] <- "Victim_Age_Group"
colnames(vic_df)[colnames(vic_df) == "VIC_SEX"] <- "Victim_Sex"
colnames(vic_df)[colnames(vic_df) == "VIC_RACE"] <- "Victim_Race"


vic_df %>%
  vcd::mosaic(fct_rev(LAW_CAT_CD) ~ Victim_Age_Group + Victim_Sex, 
              data = .,
              direction = c("v", "v", "h"),
              main = 'Victim Age Group and Sex',
              labeling = labeling_border(
                      xlab = "lab",
                       gp_labels = gpar(fontsize = 8),
                       rot_labels = c(0,0,0,0),
                       offset_label =c(0,0,0,-0.75),
                       varnames = c(TRUE, TRUE, FALSE),
                       just_labels=c("center","right")
                       ))

vic_df %>%
  vcd::mosaic(fct_rev(LAW_CAT_CD) ~ Victim_Race + Victim_Sex, 
              data = .,
              direction = c("v", "v", "h"),
              main = 'Victim Race and Sex',
              labeling = labeling_border(
                      xlab = "lab",
                       gp_labels = gpar(fontsize = 6.5),
                       rot_labels = c(30,0,0,0),
                       offset_label =c(1.5,0,0,-0.75),
                       varnames = c(FALSE, TRUE, FALSE),
                       just_labels=c("center","right")
                       ))

```


```{r}
nyc_map <- map(database="nyc")

df_geo <- df[!is.na(df$Latitude),]
df_geo <- df_geo[df_geo$Latitude > 30,]
```
This is just a boundar plot showing the outline of NYC.

```{r}

ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo, aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Density",limits = c(-100, 1500)) +
  coord_fixed(ratio = 1.2) +
  theme_void()
```

The crime density has been plotted over NYC as shown above. The binsize has been set to roughly cover 5 streets and 1 avenue. From here we can immediately see that most crimes are focused in Midtown Manhattan area just below Central Park. Not only that, Downtown Brooklyn, Downtown Flushing and the Bronx also show high crime activity. These are areas of high population density and it makes sense to have higher criminal activity in densely populated areas. As opposed to this, Staten Island has low crime rates, attributable to low population density.

```{r}
p <- ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo, aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Count/Pixel",limits = c(-10, 100)) +
  coord_fixed(ratio = 1.2) +
  theme_void() +
  labs(title = "Hour: {frame}")
  
# Here comes the gganimate specific bits
animated_plot <- p + transition_manual(Hour) +
  enter_fade() +
  exit_fade()

animate(animated_plot)
```
This animation plot shows the evolution of crime rates throughout the day from 00 hour to 24 hour. As we can see, with agreement to the timeseries plot above, crime rates are highest during Noon~14 hour time, with hotspots apprearing in Midtown Manhattan, Harlem, Bronx, Downtown Brooklyn and Downton Flushing.


```{r}
filter <- df_geo$OFNS_DESC == 'PETIT LARCENY'
p <- ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo[filter, ], aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Petit Larceny/Pixel",limits = c(-5, 40)) +
  coord_fixed(ratio = 1.2) +
  theme_void() +
  labs(title = "Hour: {frame}")
  
# Here comes the gganimate specific bits
animated_plot <- p + transition_manual(Hour) +
  enter_fade() +
  exit_fade()

animate(animated_plot)
```
This animation plot has been filtered by type of offense. In this case, this plot only shows petit larceny, the most common offense in NYC. Here we can see a similar pattern as previous animation plots, where hotspots appear in Midtown Manhattan. However, now we can see more granular hotspots of petit larceny. Note the hotspot in the western boundary between Bronx and Manhattan, in Central Bronx, in Queens. These hotspots correspond to where Target stores are at. In fact, Target has announced to pull out from various locations in NYC due to shoplifting causing major losses. Also note the hour at which these hotspots get saturated, it is around 15 hour, which is the hour with the most customers in Target. It seems the more people involved, the more likely petit larceny occurs. Lower Manhattan also shows huge amounts of petit larceny during this same hour. 


```{r}
filter <- df_geo$OFNS_DESC == 'HARRASSMENT 2'
p <- ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo[filter, ], aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Harrassment/Pixel",limits = c(-1, 10)) +
  coord_fixed(ratio = 1.2) +
  theme_void() +
  labs(title = "Hour: {frame}")
  
# Here comes the gganimate specific bits
animated_plot <- p + transition_manual(Hour) +
  enter_fade() +
  exit_fade()

animate(animated_plot)
```
This plot shows Harrasment instances, the second most common offense in NYC. We see this offense having hotspots in the Bronx, Brookyn and Harlem and not so much in Midtown and Downtown Manhattan. It also shows a consistent peak from 10 hour to 20 hour, which are times when people are generally active. Unlike petit larceny, the hotspots are not as focused but more spread out.


```{r}
filter <- df_geo$OFNS_DESC == 'ASSAULT 3 & RELATED OFFENSES'
p <- ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo[filter, ], aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Misdemeanor Assault/Pixel",limits = c(-1, 10)) +
  coord_fixed(ratio = 1.2) +
  theme_void() +
  labs(title = "Hour: {frame}")
  
# Here comes the gganimate specific bits
animated_plot <- p + transition_manual(Hour) +
  enter_fade() +
  exit_fade()

animate(animated_plot)
```
This plot shows Misdemeanor Assaults, the 3rd most common type. This crime shows similar patterns to harrasment. This makes sense considering the similarity of Assault and Harrasment.


```{r}
filter <- df_geo$OFNS_DESC == 'GRAND LARCENY'
p <- ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo[filter, ], aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Grand Larceny/Pixel",limits = c(-1, 10)) +
  coord_fixed(ratio = 1.2) +
  theme_void() +
  labs(title = "Hour: {frame}")
  
# Here comes the gganimate specific bits
animated_plot <- p + transition_manual(Hour) +
  enter_fade() +
  exit_fade()

animate(animated_plot)
```
This plot shows Grand Larceny, the 4th most common type. Here we can see that Midtwon and Downtown Manhattan are hotspots for this type of crime. Considering the affluence of those regions this makes sense. It also seems to be more active during 10 hour to 20 hour, when people are generally active. 


```{r}
filter <- df_geo$OFNS_DESC == 'FELONY ASSAULT'
p <- ggplot() +
  geom_polygon(data=nyc_map, aes(x = long, y = lat, group = group),
               fill = "grey", color = "black") + 
  geom_bin2d(data=df_geo[filter, ], aes(x = Longitude, y = Latitude), 
            binwidth = c(0.004, 0.004), alpha=0.9) +
  scale_fill_gradientn(colors = inferno(100), 
                       name = "Felony Assault/Pixel",limits = c(-1, 10)) +
  coord_fixed(ratio = 1.2) +
  theme_void() +
  labs(title = "Hour: {frame}")
  
# Here comes the gganimate specific bits
animated_plot <- p + transition_manual(Hour) +
  enter_fade() +
  exit_fade()

animate(animated_plot)
```
This plot shows Assault Felonies, the 5th most common type. Here we can see a similar pattern to Harrassment, where hotspots are located in The Bronx, Harlem, Downtown Brooklyn areas. 




